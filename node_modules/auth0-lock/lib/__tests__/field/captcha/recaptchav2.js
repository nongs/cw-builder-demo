'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _recaptchav = require('../../../field/captcha/recaptchav2');

var _recaptchav2 = _interopRequireDefault(_recaptchav);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createLockMock = function createLockMock() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$provider = _ref.provider,
      provider = _ref$provider === undefined ? 'none' : _ref$provider,
      _ref$siteKey = _ref.siteKey,
      siteKey = _ref$siteKey === undefined ? '' : _ref$siteKey;

  return _immutable2.default.fromJS({
    id: '__lock-id__',
    core: {
      captcha: { provider: provider, siteKey: siteKey },
      transient: {
        ui: {
          language: 'en-US'
        }
      }
    }
  });
};

describe('RecaptchaV2', function () {
  it('should match the snapshot', function () {
    var mockLock = createLockMock({ provider: 'recaptchav2', siteKey: 'mySiteKey' });
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_recaptchav2.default, { lock: mockLock, siteKey: 'mySiteKey' }));
    expect(wrapper).toMatchSnapshot();
  });

  describe('render', function () {
    beforeAll(function () {
      document.body.innerHTML = "<div id='renderTest'></div>";
    });
    afterAll(function () {
      document.getElementById('renderTest').remove();
    });
    it('injects the script', function () {
      var mockLock = createLockMock({ provider: 'recaptchav2', siteKey: 'mySiteKey' });
      (0, _recaptchav.render)(mockLock, document.getElementById('renderTest'), {});
      expect(document.body.innerHTML).toBe('<div id="renderTest"></div><script src="https://www.google.com/recaptcha/api.js?hl=en-US"></script>');
    });
  });
});
